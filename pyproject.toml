#-->> System <<--------------------------------------------
[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

#-->> Metadata <<------------------------------------------
[tool.poetry]
name        = "embutils"
version     = "2022.9.00"
description = "Python utilities for embedded projects"
authors     = [
    "Christian Wiche <cwichel@gmail.com>"
]
license     = "MIT"
readme      = "readme.md"
keywords    = ["python", "embedded", "utilities"]
homepage    = "https://github.com/cwichel/embutils"
repository  = "https://github.com/cwichel/embutils"
classifiers = [
    "License :: OSI Approved :: MIT License",
    "Natural Language :: English",
    "Intended Audience :: Developers",
    "Operating System :: OS Independent",
    "Development Status :: 3 - Alpha",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Software Development :: Build Tools",
    ]

#-->> Dependencies <<--------------------------------------
# Main dependencies (required by application)
[tool.poetry.dependencies]
python              = "^3.8"
attrs               = ">=22"
intelhex            = ">=2.3"
pyserial            = ">=3.5"
pyyaml              = ">=6.0"

# Development (common)
[tool.poetry.dev-dependencies]
pre-commit          = "*"
invoke              = "*"
toml                = "*"

# Documentation
[tool.poetry.group.docs]
optional = true

[tool.poetry.group.docs.dependencies]
sphinx              = "*"
sphinx-autoapi      = "*"
sphinx-rtd-theme    = "*"

# Formatting
[tool.poetry.group.lint]
optional = true

[tool.poetry.group.lint.dependencies]
flakeheaven         = "*"
flake8              = "^4.0.1"
flake8-bandit       = "*"
flake8-black        = "*"
flake8-isort        = "*"
mypy                = "*"
pylint              = "*"
pyproject-autoflake = "*"

# Testing dependencies
[tool.poetry.group.test]
optional = true

[tool.poetry.group.test.dependencies]
coverage            = {extras = ["toml"], version = "*"}
parametrize         = "*"
pytest-cov          = "*"

#-->> Configuration <<-------------------------------------
[tool.autoflake]
check                       = true
in-place                    = true
ignore-init-module-imports  = true
remove-all-unused-imports   = true
remove-unused-variables     = true
recursive                   = true

[tool.black]
line-length                 = 120
target-version              = ["py38", "py39", "py310"]
preview                     = true

[tool.coverage.run]
branch                      = true
omit                        = ["*tests*"]

[tool.coverage.report]
show_missing                = true
exclude_lines               = ["pragma: no cover", "@overload"]

[tool.isort]
profile                     = "black"
line_length                 = 120
lines_after_imports         = 2
multi_line_output           = 3
import_heading_stdlib       = "Built-in"
import_heading_thirdparty   = "External"
import_heading_firstparty   = "Project"
import_heading_localfolder  = "App"

[tool.flakeheaven]
max-line-length             = 120
max-complexity              = 25

[tool.flakeheaven.plugins]
flake8-bandit               = ["+*", "-S404"]
flake8-black                = ["+*"]
flake8-isort                = ["+*"]
pycodestyle                 = ["+*", "-W503", "-W504"]
pyflakes                    = ["+*", "-F401"]
pylint                      = ["+F*", "+E*", "-E0401", "-E0611", "-E1101", "-E1102", "-E1123"]

[tool.flakeheaven.exceptions."**/__init__.py"]
pyflakes                    = ["-F403"]

[tool.flakeheaven.exceptions."embutils/utils/subprocess.py"]
flake8-bandit               = ["-S602"]

[tool.mypy]
files                       = ["embutils/**/*.py", "tests/**/*.py"]
enable_error_code           = ["ignore-without-code", "redundant-expr", "truthy-bool"]
install_types               = true
ignore_missing_imports      = true
show_error_codes            = true
show_error_context          = true
warn_unreachable            = true
pretty                      = true

[tool.pytest.ini_options]
addopts                     = [ "-ra", "--strict-markers", "--strict-config" ]
testpaths                   = [ "tests" ]
xfail_strict                = true
